{"version":3,"sources":["assets/no_image.jpg","components/UI/VoteBadge.tsx","components/Movie/MovieActions.tsx","components/ListItem.tsx","components/List.tsx","pages/routes/MainPages/SearchResults.tsx"],"names":["module","exports","__webpack_require__","p","VoteBadge","_ref","voteAverage","rest","Object","C_Users_Asus_Documents_react_movie_web_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","Wrapper","styled","span","_templateObject","_ref2","theme","colors","yellow","_ref3","top","_ref4","right","MovieActions","onFavoriteSelect","onFavoriteDeselect","onWatchLaterSelect","onWatchLaterDeselect","isAuthenticated","favorited","isWatchLater","react","md","onClick","color","primaryTheme","red","size","white","react_router_dom","to","pathname","state","window","location","renderFavHeart","renderWatchLaterClock","div","media","phone","_templateObject2","ListItem","props","id","poster_path","title","vote_average","favoritedIds","watchLaterIds","watchLater","isFavorited","includes","String","ListItem_Wrapper","ImageBox","Movie_MovieActions","_onFavoriteSelect","apply","this","arguments","toString","_onFavoriteDeselect","_onWatchLaterSelect","_onWatchLaterDeselect","ImageLink","concat","replaceSpacesToHyphensFromString","src","alt","_onFavoriteSelect2","_onFavoriteDeselect2","_onWatchLaterSelect2","_onWatchLaterDeselect2","NoImage","li","ListItem_templateObject","figure","ListItem_templateObject2","Link","_templateObject3","connect","authSelectors","getAuth","user","getUser","favoritesSelectors","getFavoritedIds","watchLaterSelectors","getWatchLaterIds","objectSpread","favoritesEffects","watchLaterEffects","list","addToFavoritesList","removeFromFavoritesList","addToWatchLaterList","removeFromWatchLaterList","movieItems","map","movie","components_ListItem","assign","key","selectedMovie","List_Wrapper","ul","List_templateObject","laptop","List_templateObject2","tablet","List_templateObject3","smallTablet","_templateObject4","_templateObject5","smallPhone","_templateObject6","useEffect","React","term","compose","moviesSelectors","getMovie","isLoading","getLoading","C_Users_Asus_Documents_react_movie_web_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","moviesEffects","fetchMovieByQuery","getQueryStrings","search","Content","components_UI_Spinner__WEBPACK_IMPORTED_MODULE_10__","results","total_results","components_List__WEBPACK_IMPORTED_MODULE_9__","type","disabled","total_pages","page"],"mappings":"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","file":"static/js/9.36a06055.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.398a6fa0.jpg\";","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n  voteAverage: number;\r\n  right: string;\r\n  top: string;\r\n}\r\n\r\nconst VoteBadge: React.FC<Props> = ({ voteAverage, ...rest }) => (\r\n  <Wrapper {...rest}>{voteAverage}</Wrapper>\r\n);\r\n\r\nexport default VoteBadge;\r\n\r\nconst Wrapper = styled.span<{ right: string; top: string }>`\r\n  background-color: ${({ theme }) => theme.colors.yellow};\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  width: 30px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  top: ${({ top }) => top || '15px'};\r\n  right: ${({ right }) => right || '-20px'};\r\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8);\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdFavorite, MdAccessTime } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n// STYLES\r\nimport { media, primaryTheme } from 'lib/styles';\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean;\r\n  onFavoriteSelect?: () => void;\r\n  onFavoriteDeselect?: () => void;\r\n  onWatchLaterSelect?: () => void;\r\n  onWatchLaterDeselect?: () => void;\r\n  favorited: boolean;\r\n  isWatchLater: boolean;\r\n}\r\n\r\nconst renderFavHeart = (onFavoriteSelect, onFavoriteDeselect, isAuthenticated, favorited) => {\r\n  if (isAuthenticated) {\r\n    return favorited ? (\r\n      <MdFavorite\r\n        onClick={onFavoriteDeselect as any}\r\n        color={primaryTheme.colors.red}\r\n        size=\"40px\"\r\n      />\r\n    ) :\r\n    (\r\n      <MdFavorite\r\n        onClick={onFavoriteSelect as any}\r\n        color={ primaryTheme.colors.white}\r\n        size=\"40px\"\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Link to={{ pathname: '/login', state: window.location.pathname }}>\r\n      <MdFavorite\r\n        onClick={() => {}}\r\n        color={favorited ? primaryTheme.colors.red: primaryTheme.colors.white}\r\n        size=\"40px\"\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst renderWatchLaterClock = (onWatchLaterSelect, onWatchLaterDeselect, isAuthenticated, isWatchLater) => {\r\n  if (isAuthenticated) {\r\n    return isWatchLater ? (\r\n      <MdAccessTime\r\n      onClick={onWatchLaterDeselect as any}\r\n      color={primaryTheme.colors.red}\r\n      size=\"40px\"\r\n    />\r\n  ) :\r\n  (\r\n    <MdAccessTime\r\n      onClick={onWatchLaterSelect as any}\r\n      color={ primaryTheme.colors.white}\r\n      size=\"40px\"\r\n    />\r\n  );\r\n}\r\n  return (\r\n    <Link to={{ pathname: '/login', state: window.location.pathname }}>\r\n      <MdAccessTime color={primaryTheme.colors.white} size=\"40px\" />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MovieActions: React.FC<Props> = ({\r\n  onFavoriteSelect,\r\n  onFavoriteDeselect,\r\n  onWatchLaterSelect,\r\n  onWatchLaterDeselect,\r\n  isAuthenticated,\r\n  favorited,\r\n  isWatchLater,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      {renderFavHeart(onFavoriteSelect,onFavoriteDeselect, isAuthenticated, favorited)}\r\n      {renderWatchLaterClock(onWatchLaterSelect, onWatchLaterDeselect, isAuthenticated, isWatchLater)}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieActions;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  width: 200px;\r\n  svg {\r\n    padding: 10px;\r\n    border: 2px solid white;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    transition: all 0.4s ease;\r\n    cursor: pointer;\r\n    :hover {\r\n      fill: ${({ theme }) => theme.colors.red};\r\n      border-color: ${({ theme }) => theme.colors.red};\r\n    }\r\n  }\r\n  ${media.phone`\r\n    justify-self: center;\r\n  `};\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n// HELPERS\r\nimport { replaceSpacesToHyphensFromString } from 'lib/helpers';\r\n// ASSETS\r\nimport NoImage from 'assets/no_image.jpg';\r\n// COMPONENTS\r\nimport MovieActions from 'components/Movie/MovieActions';\r\nimport VoteBadge from 'components/UI/VoteBadge';\r\n\r\ninterface Props {\r\n  id: number;\r\n  poster_path: string;\r\n  title: any;\r\n  vote_average: number;\r\n  favoritedIds: string[];\r\n  watchLaterIds: string[];\r\n  favorited: boolean;\r\n  watchLater: boolean;\r\n  isAuthenticated: boolean;\r\n  onFavoriteSelect: any;\r\n  onFavoriteDeselect: any;\r\n  onWatchLaterSelect: any;\r\n  onWatchLaterDeselect: any;\r\n}\r\n\r\nconst ListItem: React.FC<Props> = props => {\r\n  const {\r\n    id,\r\n    poster_path,\r\n    title,\r\n    vote_average,\r\n    favoritedIds,\r\n    watchLaterIds,\r\n    onFavoriteSelect,\r\n    onFavoriteDeselect,\r\n    onWatchLaterSelect,\r\n    onWatchLaterDeselect,\r\n    isAuthenticated,\r\n    favorited,\r\n    watchLater,\r\n  } = props;\r\n\r\n  const isFavorited =\r\n    isAuthenticated && favoritedIds && favoritedIds.includes(String(id));\r\n  const isWatchLater =\r\n    isAuthenticated && watchLaterIds && watchLaterIds.includes(String(id));\r\n  return (\r\n    <Wrapper>\r\n      <VoteBadge voteAverage={vote_average} right=\"-20px\" top=\"15px\" />\r\n      <ImageBox>\r\n        {poster_path ? (\r\n          <>\r\n            <MovieActions\r\n              onFavoriteSelect={() => {\r\n                onFavoriteSelect(id);\r\n              }}\r\n              onFavoriteDeselect={() => {\r\n                onFavoriteDeselect(id);\r\n              }}\r\n              onWatchLaterSelect={() => {\r\n                onWatchLaterSelect(id);\r\n              }}\r\n              onWatchLaterDeselect={() => {\r\n                onWatchLaterDeselect(id);\r\n              }}\r\n              isAuthenticated={isAuthenticated}\r\n              favorited={isFavorited || favorited}\r\n              isWatchLater={isWatchLater || watchLater}\r\n            />\r\n            <ImageLink\r\n              to={`/movie/${id}-${replaceSpacesToHyphensFromString(title)}`}\r\n            >\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2${poster_path}`}\r\n                alt={title}\r\n              />\r\n            </ImageLink>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <MovieActions\r\n              onFavoriteSelect={() => {\r\n                onFavoriteSelect(id);\r\n              }}\r\n              onFavoriteDeselect={() => {\r\n                onFavoriteDeselect(id);\r\n              }}\r\n              onWatchLaterSelect={() => {\r\n                onWatchLaterSelect(id);\r\n              }}\r\n              onWatchLaterDeselect={() => {\r\n                onWatchLaterDeselect(id);\r\n              }}\r\n              isAuthenticated={isAuthenticated}\r\n              favorited={isFavorited || favorited}\r\n              isWatchLater={isWatchLater || watchLater}\r\n            />\r\n            <ImageLink\r\n              to={`/movie/${id}-${replaceSpacesToHyphensFromString(title)}`}\r\n            >\r\n              <img src={NoImage} alt={title} />\r\n            </ImageLink>\r\n          </>\r\n        )}\r\n      </ImageBox>\r\n      <h3>{title}</h3>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n\r\nconst Wrapper = styled.li`\r\n  position: relative;\r\n  width: 185px;\r\n  transition: opacity 0.3s ease;\r\n\r\n  h3 {\r\n    display: block;\r\n    font-size: 16px;\r\n    color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst ImageBox = styled.figure`\r\n  position: relative;\r\n  height: 278px;\r\n  margin: 0 auto 15px;\r\n  box-shadow: 3px 4px 7px 2px rgba(0, 0, 0, 0.4);\r\n  overflow: hidden;\r\n  transform: translateY(0) scale(1);\r\n  opacity: 1;\r\n  transition: transform 0.5s ease 0s, opacity 0.5s ease 0s;\r\n\r\n  > div {\r\n    position: absolute;\r\n    bottom: -40px;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0) 0%,\r\n      rgba(0, 0, 0, 1) 100%\r\n    );\r\n    width: 100%;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    transition: bottom 0.4s ease;\r\n    z-index: 1;\r\n\r\n    svg {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    object-fit: cover;\r\n    opacity: 1;\r\n    transition: transform 0.5s cubic-bezier(0.15, 1, 0.33, 1);\r\n}\r\n\r\n  }\r\n\r\n  :hover img {\r\n    opacity: 0.5;\r\n    transform: scale(1.15);\r\n  }\r\n\r\n  :hover > div {\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nconst ImageLink = styled(Link)`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: block;\r\n`;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n// STYLES\r\nimport { media } from 'lib/styles';\r\n// DUCKS\r\nimport { selectors as authSelectors } from 'redux/ducks/auth.duck';\r\nimport {\r\n  effects as favoritesEffects,\r\n  selectors as favoritesSelectors,\r\n} from 'redux/ducks/favorites.duck';\r\nimport {\r\n  effects as watchLaterEffects,\r\n  selectors as watchLaterSelectors,\r\n} from 'redux/ducks/watchLater.duck';\r\n// COMPONENTS\r\nimport ListItem from './ListItem';\r\n\r\ninterface Props {\r\n  isAuthenticated: boolean;\r\n  favoritedIds: string[];\r\n  watchLaterIds: string[];\r\n  list: IMovie[];\r\n  addToFavoritesList: (selectedMovie: number) => Promise<void>;\r\n  removeFromFavoritesList: (selectedMovie: number) => Promise<void>;\r\n  addToWatchLaterList: (selectedMovie: number) => Promise<void>;\r\n  removeFromWatchLaterList: (selectedMovie: number) => Promise<void>;\r\n}\r\n\r\nconst List: React.FC<Props> = ({\r\n  list,\r\n  favoritedIds,\r\n  watchLaterIds,\r\n  isAuthenticated,\r\n  addToFavoritesList,\r\n  removeFromFavoritesList,\r\n  addToWatchLaterList,\r\n  removeFromWatchLaterList,\r\n}) => {\r\n  const movieItems = list.map((movie: any) => {\r\n    return (\r\n      <ListItem\r\n        key={movie.id}\r\n        {...movie}\r\n        isAuthenticated={isAuthenticated}\r\n        favoritedIds={favoritedIds}\r\n        watchLaterIds={watchLaterIds}\r\n        onFavoriteSelect={selectedMovie => addToFavoritesList(selectedMovie)}\r\n        onFavoriteDeselect={selectedMovie =>\r\n          removeFromFavoritesList(selectedMovie)\r\n        }\r\n        onWatchLaterSelect={selectedMovie => addToWatchLaterList(selectedMovie)}\r\n        onWatchLaterDeselect={selectedMovie =>\r\n          removeFromWatchLaterList(selectedMovie)\r\n        }\r\n      />\r\n    );\r\n  });\r\n\r\n  return <Wrapper>{movieItems}</Wrapper>;\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    isAuthenticated: authSelectors.getAuth(state),\r\n    user: authSelectors.getUser(state),\r\n    favoritedIds: favoritesSelectors.getFavoritedIds(state),\r\n    watchLaterIds: watchLaterSelectors.getWatchLaterIds(state),\r\n  }),\r\n  { ...favoritesEffects, ...watchLaterEffects },\r\n)(List);\r\n\r\nconst Wrapper = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 185px);\r\n  height: auto;\r\n  grid-gap: 40px;\r\n  ${media.laptop`\r\n    grid-template-columns: repeat(4, 185px);\r\n  `};\r\n  ${media.tablet`\r\n    grid-template-columns: repeat(3, 185px);\r\n  `};\r\n  ${media.smallTablet`\r\n     grid-template-columns: repeat(2, 185px);\r\n  `};\r\n  ${media.phone`\r\n    justify-content: center;\r\n  `};\r\n  ${media.smallPhone`\r\n    grid-template-columns: repeat(1, 185px);\r\n\r\n  `};\r\n`;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Location } from 'history';\r\nimport styled from 'styled-components';\r\n// STYLES\r\nimport { media } from 'lib/styles';\r\n// HELPERS\r\nimport { getQueryStrings } from 'lib/helpers';\r\n// DUCKS\r\nimport {\r\n  effects as moviesEffects,\r\n  selectors as moviesSelectors,\r\n} from 'redux/ducks/movies.duck';\r\n// COMPONENTS\r\nimport List from 'components/List';\r\nimport Spinner from 'components/UI/Spinner';\r\n\r\ninterface Props {\r\n  movie: any;\r\n  location: Location;\r\n  isLoading: boolean;\r\n  fetchMovieByQuery: (movieName: string, page?: number) => Promise<void>;\r\n}\r\n\r\nconst { useEffect } = React;\r\nlet term: string | null = '';\r\n\r\nconst SearchResults: React.FC<Props> = ({\r\n  fetchMovieByQuery,\r\n  location,\r\n  movie,\r\n  isLoading,\r\n}) => {\r\n  useEffect(() => {\r\n    term = getQueryStrings(location.search);\r\n    fetchMovieByQuery(term || '');\r\n  }, [fetchMovieByQuery, location.search]);\r\n  return (\r\n    <Content>\r\n      <h2>Search results</h2>\r\n      {isLoading || (!movie && <Spinner />)}\r\n      {movie && movie.results && (\r\n        <>\r\n          <p>\r\n            There are <b>{movie.total_results}</b> results for: <b>{term}</b>\r\n          </p>\r\n          <List list={movie.results} />\r\n          <button\r\n            type=\"button\"\r\n            disabled={movie.total_pages === 1}\r\n            onClick={() => fetchMovieByQuery(term || '', movie.page + 1)}\r\n          >\r\n            Load more\r\n          </button>\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    state => ({\r\n      movie: moviesSelectors.getMovie(state),\r\n      isLoading: moviesSelectors.getLoading(state),\r\n    }),\r\n    { ...moviesEffects },\r\n  ),\r\n  React.memo,\r\n)(SearchResults);\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  padding: 30px 25px 40px 30px;\r\n\r\n  > p {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  button {\r\n    width: 200px;\r\n    margin-top: 50px;\r\n    font-size: 22px;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.colors.red};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    transition: all 0.3s;\r\n\r\n    ${media.phone`\r\n      justify-self: center;\r\n    `};\r\n\r\n    :hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    :disabled {\r\n      opacity: 0.8;\r\n      pointer-events: none;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}