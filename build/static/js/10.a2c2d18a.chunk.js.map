{"version":3,"sources":["components/UI/Page.tsx","assets/no_image.jpg","components/UI/VoteBadge.tsx","components/UI/Meter.tsx","components/Movie/MovieInfoBar.tsx","components/UI/ShowMore.tsx","components/Movie/MovieInfo.tsx","pages/routes/MainPages/Movie.tsx"],"names":["Content","styled","div","_templateObject","media","phone","_templateObject2","module","exports","__webpack_require__","p","VoteBadge","_ref","voteAverage","rest","Object","C_Users_Asus_Documents_react_movie_web_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","Wrapper","span","_ref2","theme","colors","yellow","_ref3","top","_ref4","right","Meter","props","react","meter","blue","transparentBlue","red","MovieInfoBar","_ref$time","time","_ref$budget","budget","_ref$revenue","revenue","react_default","a","createElement","MovieInfoBar_Wrapper","calcTime","convertMoney","MovieInfoBar_templateObject","ShowMore","title","isOpen","toggleShowMore","ShowMore_Wrapper","StyledExpandIcon","size","color","primaryTheme","black","onClick","ShowMore_templateObject","MdExpandMore","white","MovieInfo","isAuthenticated","movie","openModal","closeModal","_useShowMore","useShowMore","MovieInfo_Wrapper","poster_path","src","concat","alt","NoImage","videos","results","length","trailer","LinkInstead","type","args","trailerLink","key","md","StyledLink","to","pathname","state","window","location","renderPlay","overview","Rating","vote_average","UI_Meter","min","max","optimum","low","high","value","UI_ShowMore","Movie_MovieInfoBar","runtime","MovieInfo_templateObject","MovieInfo_templateObject2","_templateObject3","_templateObject4","_templateObject5","Link","_templateObject6","_templateObject7","_ref5","_ref6","_ref7","useEffect","React","compose","connect","authSelectors","getAuth","moviesSelectors","getMovie","isLoading","getLoading","objectSpread","modalsActions","movieActions","moviesEffects","clearMovie","fetchMovie","match","params","id","Page","Loading","Spinner","Movie_Wrapper","Movie_MovieInfo","Movie_templateObject","Movie_templateObject2"],"mappings":"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","file":"static/js/10.a2c2d18a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { media } from 'lib/styles';\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: 1200px;\r\n  padding: 30px 25px 40px 30px;\r\n  ${media.phone`\r\n   height: auto;\r\n    padding: 17px 15px 17px 15px;\r\n  `};\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/media/no_image.398a6fa0.jpg\";","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n  voteAverage: number;\r\n  right: string;\r\n  top: string;\r\n}\r\n\r\nconst VoteBadge: React.FC<Props> = ({ voteAverage, ...rest }) => (\r\n  <Wrapper {...rest}>{voteAverage}</Wrapper>\r\n);\r\n\r\nexport default VoteBadge;\r\n\r\nconst Wrapper = styled.span<{ right: string; top: string }>`\r\n  background-color: ${({ theme }) => theme.colors.yellow};\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  width: 30px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  top: ${({ top }) => top || '15px'};\r\n  right: ${({ right }) => right || '-20px'};\r\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8);\r\n  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = any;\r\n\r\nconst Meter: React.FC<Props> = props => <Wrapper {...props} />;\r\n\r\nexport default Meter;\r\n\r\nconst Wrapper = styled.meter`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30px;\r\n  background: #eee;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2) inset;\r\n  border-radius: 3px;\r\n\r\n  ::-webkit-meter-bar {\r\n    background: #eee;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2) inset;\r\n    border-radius: 3px;\r\n  }\r\n  ::-webkit-meter-optimum-value {\r\n    background: ${({ theme }) => theme.colors.blue};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  ::-webkit-meter-suboptimum-value {\r\n    background: ${({ theme }) => theme.colors.transparentBlue};\r\n    border-radius: 3px;\r\n  }\r\n\r\n  ::-webkit-meter-even-less-good-value {\r\n    background: ${({ theme }) => theme.colors.red};\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// HELPERS\r\nimport { calcTime, convertMoney } from 'lib/helpers';\r\n\r\ninterface Props {\r\n  time: number;\r\n  budget: number;\r\n  revenue: number;\r\n}\r\n\r\nconst MovieInfoBar: React.FC<Props> = ({\r\n  time = 0,\r\n  budget = 0,\r\n  revenue = 0,\r\n}) => (\r\n  <Wrapper>\r\n    <span>Running time: {calcTime(time)}</span>\r\n    <span>Budget: {convertMoney(budget)}</span>\r\n    <span>Revenue: {convertMoney(revenue)}</span>\r\n  </Wrapper>\r\n);\r\n\r\nexport default MovieInfoBar;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n`;\r\n","import * as React from 'react';\r\nimport { MdExpandMore } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n// STYLES\r\nimport { primaryTheme } from 'lib/styles';\r\n\r\ninterface Props {\r\n  title: string;\r\n  isOpen: boolean;\r\n  toggleShowMore: () => void;\r\n}\r\n\r\ninterface StyledProps {\r\n  readonly isOpen: boolean;\r\n  readonly size: string;\r\n  readonly color: string;\r\n  readonly onClick: () => void;\r\n}\r\n\r\nconst ShowMore: React.FC<Props> = ({\r\n  title,\r\n  isOpen,\r\n  toggleShowMore,\r\n}: Props) => {\r\n  return (\r\n    <Wrapper>\r\n      <span>{title}</span>\r\n      <StyledExpandIcon\r\n        isOpen={isOpen}\r\n        size=\"30px\"\r\n        color={primaryTheme.colors.black}\r\n        onClick={toggleShowMore}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ShowMore;\r\n\r\nconst Wrapper = styled.p`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 134px auto;\r\n  margin-bottom: 0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StyledExpandIcon = styled(MdExpandMore)<StyledProps>`\r\n  fill: ${({ theme }) => theme.colors.white};\r\n  transform: ${({ isOpen }) => isOpen && 'rotate(180deg)'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { MdPlayArrow } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n// STYLES\r\nimport { media, primaryTheme } from 'lib/styles';\r\n// ASSETS\r\nimport NoImage from 'assets/no_image.jpg';\r\n// HOOKS\r\nimport { useShowMore } from 'lib/hooks';\r\n// COMPONENTS\r\nimport Meter from 'components/UI/Meter';\r\nimport VoteBadge from 'components/UI/VoteBadge';\r\nimport MovieInfoBar from 'components/Movie/MovieInfoBar';\r\nimport ShowMore from 'components/UI/ShowMore';\r\n\r\ninterface Props {\r\n  movie: IMovie;\r\n  isAuthenticated: boolean;\r\n  closeModal: () => void;\r\n  openModal: () => void;\r\n}\r\n\r\nconst renderPlay = (isAuthenticated, openModal, closeModal, trailer) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      // eslint-disable-next-line\r\n       <LinkInstead onClick={() => openModal({\r\n            type: 'video',\r\n            args: { closeModal, trailerLink: trailer.key },\r\n          })\r\n        }\r\n      >\r\n        <span>Watch Trailer</span>\r\n        <MdPlayArrow color={primaryTheme.colors.white} size=\"40px\" />\r\n      </LinkInstead>\r\n    );\r\n  }\r\n  return (\r\n    <StyledLink to={{ pathname: '/login', state: window.location.pathname }}>\r\n      <span>Watch Trailer</span>\r\n      <MdPlayArrow color={primaryTheme.colors.white} size=\"40px\" />\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nconst MovieInfo: React.FC<Props> = ({\r\n  isAuthenticated,\r\n  movie,\r\n  openModal,\r\n  closeModal,\r\n}) => {\r\n  const { isOpen, toggleShowMore } = useShowMore(false);\r\n  return (\r\n    <Wrapper>\r\n      {movie.poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n          alt=\"\"\r\n        />\r\n      ) : (\r\n        <img src={NoImage} alt=\"\" />\r\n      )}\r\n      <Content>\r\n        <h1>{movie.title}</h1>\r\n        {movie.videos &&\r\n          movie.videos.results.length > 0 &&\r\n          movie.videos.results[0] &&\r\n          renderPlay(\r\n            isAuthenticated,\r\n            openModal,\r\n            closeModal,\r\n            movie.videos.results[0],\r\n          )}\r\n        <h2>Overview</h2>\r\n        <p>{movie.overview}</p>\r\n\r\n        <Rating>\r\n          <h2>IMDB RATING</h2>\r\n          <VoteBadge voteAverage={movie.vote_average} right=\"0px\" top=\"0px\" />\r\n          <Meter\r\n            min=\"0\"\r\n            max=\"100\"\r\n            optimum=\"100\"\r\n            low=\"40\"\r\n            high=\"70\"\r\n            value={movie.vote_average * 10}\r\n          />\r\n        </Rating>\r\n        <ShowMore\r\n          isOpen={isOpen}\r\n          toggleShowMore={toggleShowMore}\r\n          title=\"Show additional info\"\r\n        />\r\n        {isOpen && (\r\n          <MovieInfoBar\r\n            time={movie.runtime || 0}\r\n            budget={movie.budget || 0}\r\n            revenue={movie.revenue || 0}\r\n          />\r\n        )}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px auto;\r\n  grid-gap: 20px;\r\n  ${media.phone`\r\n  grid-template-columns: 1fr;\r\n\r\n    img {\r\n      justify-self: center;\r\n    }\r\n  `};\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  ${media.phone`\r\n    grid-gap: 20px;\r\n    > div:first-child {\r\n      justify-self: center;\r\n    }\r\n    h1 {\r\n        text-align: center;\r\n    };\r\n  `};\r\n`;\r\n\r\nconst Rating = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-auto-flow: column;\r\n  width: 140px;\r\n  height: max-content;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.red};\r\n\r\n    svg {\r\n      fill: ${({ theme }) => theme.colors.red};\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkInstead = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-auto-flow: column;\r\n  width: 140px;\r\n  height: max-content;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.red};\r\n\r\n    svg {\r\n      fill: ${({ theme }) => theme.colors.red};\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport styled from 'styled-components';\r\n// DUCKS\r\nimport {\r\n  actions as movieActions,\r\n  effects as moviesEffects,\r\n  selectors as moviesSelectors,\r\n} from 'redux/ducks/movies.duck';\r\nimport { selectors as authSelectors } from 'redux/ducks/auth.duck';\r\nimport { actions as modalsActions } from 'redux/ducks/modals.duck';\r\n// COMPONENTS\r\nimport { Content } from 'components/UI/Page';\r\nimport MovieInfo from 'components/Movie/MovieInfo';\r\nimport Spinner from 'components/UI/Spinner';\r\n\r\ntype Props = RouteComponentProps & {\r\n  isLoading: boolean;\r\n  match: { params: { id: number } };\r\n  movie: IMovie;\r\n  isAuthenticated: boolean;\r\n  closeModal: () => void;\r\n  openModal: () => void;\r\n  clearMovie: () => void;\r\n  fetchMovie: (id: number) => Promise<void>;\r\n};\r\n\r\nconst { useEffect } = React;\r\n\r\nconst Movie: React.FC<Props> = ({\r\n  isAuthenticated,\r\n  closeModal,\r\n  openModal,\r\n  clearMovie,\r\n  fetchMovie,\r\n  isLoading,\r\n  match,\r\n  movie,\r\n}) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      clearMovie();\r\n    };\r\n  }, [clearMovie]);\r\n  useEffect(() => {\r\n    fetchMovie(match.params.id);\r\n  }, [fetchMovie, match.params.id]);\r\n  return (\r\n    <Content>\r\n      {isLoading || !movie ? (\r\n        <Loading>\r\n          <Spinner />\r\n        </Loading>\r\n      ) : (\r\n        <Wrapper>\r\n          <MovieInfo\r\n            movie={movie}\r\n            openModal={openModal}\r\n            closeModal={closeModal}\r\n            isAuthenticated={isAuthenticated}\r\n          />\r\n        </Wrapper>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    state => ({\r\n      isAuthenticated: authSelectors.getAuth(state),\r\n      movie: moviesSelectors.getMovie(state),\r\n      isLoading: moviesSelectors.getLoading(state),\r\n    }),\r\n    { ...modalsActions, ...movieActions, ...moviesEffects },\r\n  ),\r\n  React.memo,\r\n)(Movie);\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n"],"sourceRoot":""}